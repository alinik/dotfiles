#!/usr/bin/env bash

# Git plugin: run a Git subcommand across all repos under the current folder.
# Usage: git all <git-subcommand> [args...]

#set -e
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RESET='\033[0m'

if [[ $# -lt 1 ]]; then
  cat <<EOF
Usage: git all <git-subcommand> [args...]
Example: git all status
         git all pull --rebase
EOF
  exit 1
fi

# Capture the subcommand and its arguments
cmd=(git "$@")
failures=0

# Find all .git directories and iterate
# Requires 'fd' (fd-find) or fallback to 'find'
if command -v fd >/dev/null 2>&1; then
  repos=$(fd -t d -u -a .git$ .)
else
  repos=$(find . -type d -name .git)
fi

while IFS= read -r gitdir; do
  repo_dir=$(dirname "$gitdir")
  echo -e "Repo: $GREEN$repo_dir$RESET"

  pushd "$repo_dir" >/dev/null || { 
    echo "Failed to cd into $repo_dir" >&2
    ((failures++))
    continue
  }

  if ! "${cmd[@]}"; then
    echo "Error: 'git ${*}' failed in $repo_dir" >&2
    ((failures++))
  fi

  popd >/dev/null
done <<< "$repos"

if (( failures > 0 )); then
  echo
  echo "Completed with $failures error(s)." >&2
  exit 1
else
  echo
  echo "All repos processed successfully."
fi
